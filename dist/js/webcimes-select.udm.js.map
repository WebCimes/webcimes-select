{"version":3,"file":"js/webcimes-select.udm.js","mappings":"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","sources":["webpack://webcimes-select/webpack/universalModuleDefinition","webpack://webcimes-select/webpack/bootstrap","webpack://webcimes-select/webpack/runtime/define property getters","webpack://webcimes-select/webpack/runtime/hasOwnProperty shorthand","webpack://webcimes-select/webpack/runtime/make namespace object","webpack://webcimes-select/./src/ts/webcimes-select.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Copyright (c) 2023 WebCimes - RICHARD Florian (https://webcimes.com)\r\n * MIT License - https://choosealicense.com/licenses/mit/\r\n * Date: 2023-03-25\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Global\r\n */\r\ndeclare global {\r\n    /** Events */\r\n    interface GlobalEventHandlersEventMap {\r\n        onInit: CustomEvent;\r\n        onDestroy: CustomEvent;\r\n        onInitDropdown: CustomEvent;\r\n        onDestroyDropdown: CustomEvent;\r\n        onSearchDropdown: CustomEvent;\r\n        onChange: CustomEvent;\r\n        onAddOption: CustomEvent;\r\n        onRemoveOption: CustomEvent;\r\n        onRemoveAllOptions: CustomEvent;\r\n    }\r\n}\r\n\r\n/**\r\n * Default texts\r\n */\r\nexport interface defaultTexts {\r\n    removeOptionText: string;\r\n    removeAllOptionsText: string;\r\n    searchPlaceholderText: string;\r\n    searchNoResultsText: string;\r\n    optionIconSelectedText: string;\r\n}\r\n\r\n/**\r\n * Options\r\n */\r\nexport interface Options {\r\n    /** Element (selector string or HTMLElement) */\r\n    element: string | HTMLElement | null;\r\n    /** set a specific id on the select. default \"null\" */\r\n    setId: string | null;\r\n    /** set a specific class on the select, default \"null\" */\r\n    setClass: string | null;\r\n    /** width (specify unit), default \"auto\" */\r\n    width: string;\r\n    /** height (specify unit), default \"auto\" */\r\n    height: string;\r\n    /** max-height for options list (specify unit), default \"200px\" */\r\n    maxHeightOptions: string;\r\n    /** add extra css style to select, default null */\r\n    style: string | null;\r\n    /** allow clear selected options, default true */\r\n    allowClear: boolean;\r\n    /** allow search options, default true */\r\n    allowSearch: boolean;\r\n    /** autofocus on search field when open select, default true */\r\n    searchAutoFocus: boolean;\r\n    /** keep dropdown open after selecting an option, default false */\r\n    keepOpenDropdown: boolean;\r\n    /** set default language for defaultTexts, default \"en\" */\r\n    language: string;\r\n    /** set default texts for select (override the language texts), default english texts */\r\n    defaultTexts: defaultTexts;\r\n    /** set placeholder text, default null */\r\n    placeholderText: string | null;\r\n    /** set aria-label for select, default null */\r\n    ariaLabel: string | null;\r\n    /** callback on init select */\r\n    onInit(): void;\r\n    /** callback on destroy select */\r\n    onDestroy(): void;\r\n    /** callback on init dropdown */\r\n    onInitDropdown(): void;\r\n    /** callback on destroy dropdown */\r\n    onDestroyDropdown(): void;\r\n    /** callback on search dropdown */\r\n    onSearchDropdown(value: string, options: HTMLOptionElement[]): void;\r\n    /** callback on change */\r\n    onChange(value: string, selected: boolean, selectedOptions: HTMLOptionElement[]): void;\r\n    /** callback on add option */\r\n    onAddOption(value: string): void;\r\n    /** callback on remove option */\r\n    onRemoveOption(value: string): void;\r\n    /** callback on  all options */\r\n    onRemoveAllOptions(): void;\r\n}\r\n\r\n/**\r\n * Public interface for WebcimesSelect instances\r\n * This represents the actual accessible members of the instance\r\n */\r\nexport interface WebcimesSelect {\r\n    /** Get the dom element of the native select */\r\n    nativeSelect: HTMLSelectElement | null;\r\n    /** Get the dom element of select */\r\n    select: HTMLElement;\r\n    /** Get the dom element of dropdown */\r\n    dropdown: HTMLElement | null;\r\n    /** Destroy the select */\r\n    destroy(): void;\r\n    /** Enable or disable the select */\r\n    disable(disable?: boolean): void;\r\n    /** Get selected options */\r\n    getSelectedOptions(): HTMLOptionElement[];\r\n    /** Initialize options */\r\n    initOptions(): void;\r\n    /** Add an option */\r\n    addOption(value: string | null): void;\r\n    /** Remove an option */\r\n    removeOption(value: string | null): void;\r\n    /** Remove all options */\r\n    removeAllOptions(): void;\r\n}\r\n\r\n/**\r\n * WebcimesSelect implementation class\r\n */\r\nclass WebcimesSelectImpl implements WebcimesSelect {\r\n    /** Get the dom element of the native select */\r\n    public nativeSelect: HTMLSelectElement | null;\r\n\r\n    /** Get the dom element of select */\r\n    public select: HTMLElement;\r\n\r\n    /** Get the dom element of dropdown */\r\n    public dropdown: HTMLElement | null = null;\r\n\r\n    /** Options of WebcimesSelect */\r\n    private options: Options;\r\n\r\n    /** Get the unique id of dropdown options */\r\n    private idDropdownOptions: string;\r\n\r\n    /** Set the default texts for each language */\r\n    private defaultTexts: { [key: string]: defaultTexts } = {\r\n        en: {\r\n            removeOptionText: 'Remove option',\r\n            removeAllOptionsText: 'Remove all options',\r\n            searchPlaceholderText: 'Search',\r\n            searchNoResultsText: 'No results found',\r\n            optionIconSelectedText: 'Selected',\r\n        },\r\n        fr: {\r\n            removeOptionText: \"Supprimer l'option\",\r\n            removeAllOptionsText: 'Supprimer toutes les options',\r\n            searchPlaceholderText: 'Rechercher',\r\n            searchNoResultsText: 'Aucun résultat trouvé',\r\n            optionIconSelectedText: 'Sélectionné',\r\n        },\r\n        es: {\r\n            removeOptionText: 'Eliminar opción',\r\n            removeAllOptionsText: 'Eliminar todas las opciones',\r\n            searchPlaceholderText: 'Buscar',\r\n            searchNoResultsText: 'No se encontraron resultados',\r\n            optionIconSelectedText: 'Seleccionado',\r\n        },\r\n        de: {\r\n            removeOptionText: 'Option entfernen',\r\n            removeAllOptionsText: 'Alle Optionen entfernen',\r\n            searchPlaceholderText: 'Suche',\r\n            searchNoResultsText: 'Keine Ergebnisse gefunden',\r\n            optionIconSelectedText: 'Ausgewählt',\r\n        },\r\n        it: {\r\n            removeOptionText: 'Rimuovi opzione',\r\n            removeAllOptionsText: 'Rimuovi tutte le opzioni',\r\n            searchPlaceholderText: 'Cerca',\r\n            searchNoResultsText: 'Nessun risultato trovato',\r\n            optionIconSelectedText: 'Selezionato',\r\n        },\r\n        pt: {\r\n            removeOptionText: 'Remover opção',\r\n            removeAllOptionsText: 'Remover todas as opções',\r\n            searchPlaceholderText: 'Pesquisar',\r\n            searchNoResultsText: 'Nenhum resultado encontrado',\r\n            optionIconSelectedText: 'Selecionado',\r\n        },\r\n        nl: {\r\n            removeOptionText: 'Optie verwijderen',\r\n            removeAllOptionsText: 'Alle opties verwijderen',\r\n            searchPlaceholderText: 'Zoeken',\r\n            searchNoResultsText: 'Geen resultaten gevonden',\r\n            optionIconSelectedText: 'Geselecteerd',\r\n        },\r\n        ru: {\r\n            removeOptionText: 'Удалить опцию',\r\n            removeAllOptionsText: 'Удалить все опции',\r\n            searchPlaceholderText: 'Поиск',\r\n            searchNoResultsText: 'Результаты не найдены',\r\n            optionIconSelectedText: 'Выбрано',\r\n        },\r\n    };\r\n\r\n    /**\r\n     * Create select\r\n     */\r\n    constructor(options: Partial<Options>) {\r\n        // Defaults\r\n        const defaults: Options = {\r\n            element: null,\r\n            setId: null,\r\n            setClass: null,\r\n            width: 'auto',\r\n            height: 'auto',\r\n            maxHeightOptions: '200px',\r\n            style: null,\r\n            allowClear: true,\r\n            allowSearch: true,\r\n            searchAutoFocus: true,\r\n            keepOpenDropdown: false,\r\n            language: 'en',\r\n            defaultTexts: this.defaultTexts['en'],\r\n            placeholderText: null,\r\n            ariaLabel: null,\r\n            onInit: () => {},\r\n            onDestroy: () => {},\r\n            onInitDropdown: () => {},\r\n            onDestroyDropdown: () => {},\r\n            onSearchDropdown: () => {},\r\n            onChange: () => {},\r\n            onAddOption: () => {},\r\n            onRemoveOption: () => {},\r\n            onRemoveAllOptions: () => {},\r\n        };\r\n\r\n        // If options language is set, set defaultTexts according to the language\r\n        if (options.language && this.defaultTexts[options.language]) {\r\n            defaults.defaultTexts = this.defaultTexts[options.language];\r\n        }\r\n\r\n        // If options defaultTexts is set, merge defaults.defaultTexts with options.defaultTexts\r\n        if (options.defaultTexts) {\r\n            options.defaultTexts = {\r\n                ...defaults.defaultTexts,\r\n                ...options.defaultTexts,\r\n            };\r\n        }\r\n\r\n        // Merge defaults and options\r\n        this.options = { ...defaults, ...options };\r\n\r\n        // Bind \"this\" to all events\r\n        this.onNativeSelectClick = this.onNativeSelectClick.bind(this);\r\n        this.onClearOption = this.onClearOption.bind(this);\r\n        this.onClearAllOptions = this.onClearAllOptions.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.onClickInitDropdown = this.onClickInitDropdown.bind(this);\r\n        this.onDropdownSearch = this.onDropdownSearch.bind(this);\r\n        this.onDropdownKeyDown = this.onDropdownKeyDown.bind(this);\r\n        this.onDropdownMouseOverOption = this.onDropdownMouseOverOption.bind(this);\r\n        this.onDropdownResize = this.onDropdownResize.bind(this);\r\n        this.onDropdownClickOption = this.onDropdownClickOption.bind(this);\r\n        this.onDropdownDestroy = this.onDropdownDestroy.bind(this);\r\n\r\n        // Call init method\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * Convert elements entry to an array of HTMLElement\r\n     */\r\n    private getHtmlElements(element: string | HTMLElement | NodeList | null) {\r\n        // Convert options.element to an array of HTMLElement\r\n        let htmlElements: HTMLElement[] = [];\r\n        if (element instanceof NodeList) {\r\n            htmlElements = [...(Array.from(element) as HTMLElement[])];\r\n        }\r\n        if (element instanceof HTMLElement) {\r\n            htmlElements = [...[element]];\r\n        }\r\n        if (typeof element === 'string') {\r\n            htmlElements = [...(Array.from(document.querySelectorAll(element)) as HTMLElement[])];\r\n        }\r\n        return htmlElements;\r\n    }\r\n\r\n    /**\r\n     * Convert element entry to an HTMLElement\r\n     */\r\n    private getHtmlElement(element: string | HTMLElement | null) {\r\n        // Convert options.element to an array of HTMLElement\r\n        let htmlElement: HTMLElement | null = null;\r\n        if (element instanceof HTMLElement) {\r\n            htmlElement = element;\r\n        }\r\n        if (typeof element === 'string') {\r\n            htmlElement = document.querySelector(element) as HTMLElement | null;\r\n        }\r\n        return htmlElement;\r\n    }\r\n\r\n    /**\r\n     * Get a unique ID, related to the identifier\r\n     * @param selectorPrefix Prefix of the selector\r\n     * @param identifier Identifier to find\r\n     * @param selectorSuffix Suffix of the selector\r\n     * @param element Find if the ID already exist in provided dom element\r\n     */\r\n    private getUniqueID(\r\n        selectorPrefix: string,\r\n        identifier: string,\r\n        selectorSuffix: string = '',\r\n        element: HTMLElement | Document | DocumentFragment | null = null,\r\n    ) {\r\n        // If element is null, set document\r\n        element = element ?? document;\r\n\r\n        // Generate a unique ID\r\n        do {\r\n            identifier += Math.floor(Math.random() * 10000);\r\n        } while (element.querySelector(selectorPrefix + identifier + selectorSuffix));\r\n\r\n        return identifier;\r\n    }\r\n\r\n    /**\r\n     * Initialization of select\r\n     */\r\n    private init() {\r\n        // Define native select\r\n        this.nativeSelect = this.getHtmlElement(this.options.element) as HTMLSelectElement | null;\r\n        if (this.nativeSelect) {\r\n            // Hide native select\r\n            this.nativeSelect.style.display = 'none';\r\n\r\n            // Set aria label\r\n            if (!this.options.ariaLabel) {\r\n                if (this.nativeSelect.getAttribute('aria-label')) {\r\n                    this.options.ariaLabel = this.nativeSelect.getAttribute('aria-label');\r\n                } else {\r\n                    // Get label element relative to native select\r\n                    let label = (this.nativeSelect.closest('label') ||\r\n                        document.querySelector(\r\n                            `label[for=\"${this.nativeSelect.id}\"]`,\r\n                        )) as HTMLElement | null;\r\n                    if (label) {\r\n                        this.options.ariaLabel = label.innerText.trim();\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Set id for dropdown options\r\n            this.idDropdownOptions = this.getUniqueID('#', 'webcimes-dropdown-options-');\r\n\r\n            // Append select after native select\r\n            this.nativeSelect.insertAdjacentHTML(\r\n                'afterend',\r\n                `<div class=\"webcimes-select ${\r\n                    this.nativeSelect.multiple ? `webcimes-select--multiple` : ``\r\n                } ${this.nativeSelect.disabled ? `webcimes-select--disabled` : ``} ${\r\n                    this.options.setClass ? this.options.setClass : ``\r\n                }\" ${this.options.setId ? `id=\"${this.options.setId}\"` : ``} ${\r\n                    this.nativeSelect.getAttribute('dir') == 'rtl' ? `dir=\"rtl\"` : ``\r\n                } role=\"combobox\" aria-controls=\"${\r\n                    this.idDropdownOptions\r\n                }\" aria-expanded=\"false\" aria-haspopup=\"listbox\" ${\r\n                    this.options.ariaLabel ? `aria-label=\"${this.options.ariaLabel}\"` : ``\r\n                } tabindex=\"0\">\r\n\t\t\t\t\t<div class=\"webcimes-select__options\"></div>\r\n\t\t\t\t\t${\r\n                        this.options.allowClear\r\n                            ? `<button type=\"button\" class=\"webcimes-select__clear\" title=\"${this.options.defaultTexts.removeAllOptionsText}\" aria-label=\"${this.options.defaultTexts.removeAllOptionsText}\"><div class=\"webcimes-select__cross\"></div></button>`\r\n                            : ''\r\n                    }\r\n\t\t\t\t\t<div class=\"webcimes-select__arrow\"></div>\r\n\t\t\t\t</div>`,\r\n            );\r\n\r\n            // Define select\r\n            this.select = this.nativeSelect.nextElementSibling as HTMLElement;\r\n\r\n            // Set placeholder\r\n            if (!this.options.placeholderText) {\r\n                if (this.nativeSelect.querySelector(\"option[value='']\")) {\r\n                    this.options.placeholderText =\r\n                        this.nativeSelect.querySelector(\"option[value='']\")!.textContent;\r\n                }\r\n            }\r\n\r\n            // Width of select\r\n            if (this.options.width != 'auto' && this.options.width) {\r\n                this.select.style.setProperty('width', this.options.width);\r\n            }\r\n\r\n            // Height of select\r\n            if (this.options.height != 'auto' && this.options.height) {\r\n                this.select.style.setProperty('height', this.options.height);\r\n            }\r\n\r\n            // Style\r\n            if (this.options.style) {\r\n                let oldStyle = this.select.getAttribute('style') ?? '';\r\n                this.select.setAttribute('style', oldStyle + this.options.style);\r\n            }\r\n\r\n            // Set select value (or placeholder)\r\n            this.initOptions();\r\n\r\n            // Event init dropdown after click on label (who is relative to native select)\r\n            this.nativeSelect.addEventListener('click', this.onNativeSelectClick);\r\n\r\n            // Event clear all selected options on select\r\n            this.select\r\n                .querySelector('.webcimes-select > .webcimes-select__clear')\r\n                ?.addEventListener('click', this.onClearAllOptions);\r\n\r\n            // Event on keydown on select\r\n            this.select.addEventListener('keydown', this.onKeyDown);\r\n\r\n            // Event init dropdown on click on select\r\n            this.select.addEventListener('click', this.onClickInitDropdown);\r\n\r\n            // Callback on init select (set a timeout of zero, to wait for some dom to load)\r\n            setTimeout(() => {\r\n                this.select.dispatchEvent(new CustomEvent('onInit'));\r\n                if (typeof this.options.onInit === 'function') {\r\n                    this.options.onInit();\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroy select and revert to native select\r\n     */\r\n    public destroy() {\r\n        // Destroy dropdown if exist\r\n        this.destroyDropdown();\r\n\r\n        // Remove events\r\n        this.nativeSelect!.removeEventListener('click', this.onNativeSelectClick);\r\n        this.select\r\n            .querySelectorAll('.webcimes-select__option .webcimes-select__clear')\r\n            .forEach((el) => {\r\n                el.removeEventListener('click', this.onClearOption);\r\n            });\r\n        this.select\r\n            .querySelector('.webcimes-select > .webcimes-select__clear')\r\n            ?.removeEventListener('click', this.onClearAllOptions);\r\n        this.select.removeEventListener('keydown', this.onKeyDown);\r\n        this.select.removeEventListener('click', this.onClickInitDropdown);\r\n\r\n        // Show native select\r\n        this.nativeSelect!.style.removeProperty('display');\r\n\r\n        // Remove select\r\n        this.select.remove();\r\n\r\n        // Callback on destroy select\r\n        this.select.dispatchEvent(new CustomEvent('onDestroy'));\r\n        if (typeof this.options.onDestroy === 'function') {\r\n            this.options.onDestroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set select disabled or not\r\n     */\r\n    public disable(disable: boolean = true) {\r\n        if (this.nativeSelect) {\r\n            if (disable) {\r\n                this.nativeSelect.setAttribute('disabled', '');\r\n                this.nativeSelect.disabled = true;\r\n                this.select.classList.add('webcimes-select--disabled');\r\n            } else {\r\n                this.nativeSelect.removeAttribute('disabled');\r\n                this.nativeSelect.disabled = false;\r\n                this.select.classList.remove('webcimes-select--disabled');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get selected options with no empty value\r\n     */\r\n    public getSelectedOptions(): HTMLOptionElement[] {\r\n        return Array.from(this.nativeSelect?.selectedOptions || []).filter((el) => {\r\n            return el.value !== '';\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Init options or placeholder on select, according selected option on native select field\r\n     */\r\n    public initOptions() {\r\n        if (this.nativeSelect) {\r\n            // Get selected options with no empty value\r\n            let selectedOptions = this.getSelectedOptions();\r\n\r\n            // Remove old event clear selected option on select\r\n            this.select\r\n                .querySelectorAll('.webcimes-select__option .webcimes-select__clear')\r\n                .forEach((el) => {\r\n                    el.removeEventListener('click', this.onClearOption);\r\n                });\r\n\r\n            // Remove old option(s)\r\n            this.select.querySelector('.webcimes-select__options')!.innerHTML = '';\r\n\r\n            // If an option is selected, show the value\r\n            if (selectedOptions.length) {\r\n                this.select.classList.add('webcimes-select--selected');\r\n                this.select\r\n                    .querySelector('.webcimes-select > .webcimes-select__clear')\r\n                    ?.classList.add('webcimes-select__clear--active');\r\n                selectedOptions.forEach((el) => {\r\n                    let option = document.createElement('template');\r\n                    option.innerHTML = `<div class=\"webcimes-select__option\" data-value=\"${\r\n                        el.value\r\n                    }\">\r\n\t\t\t\t\t\t<div class=\"webcimes-select__option-label\" title=\"${\r\n                            el.textContent\r\n                        }\" aria-label=\"${el.textContent}\">${el.textContent}</div>\r\n\t\t\t\t\t\t${\r\n                            this.nativeSelect!.multiple && !el.disabled\r\n                                ? `<button type=\"button\" class=\"webcimes-select__clear\" title=\"${this.options.defaultTexts.removeOptionText} ${el.textContent}\" aria-label=\"${this.options.defaultTexts.removeOptionText} ${el.textContent}\"><div class=\"webcimes-select__cross\"></div></button>`\r\n                                : ``\r\n                        }\r\n\t\t\t\t\t</div>\\n`;\r\n                    this.select\r\n                        .querySelector('.webcimes-select__options')!\r\n                        .appendChild(option.content);\r\n                });\r\n            }\r\n            // Else if a placeholder string exist, show the value\r\n            else if (this.options.placeholderText) {\r\n                this.select.classList.remove('webcimes-select--selected');\r\n                this.select\r\n                    .querySelector('.webcimes-select > .webcimes-select__clear')\r\n                    ?.classList.remove('webcimes-select__clear--active');\r\n                let option = document.createElement('template');\r\n                option.innerHTML = `<div class=\"webcimes-select__option webcimes-select__option--placeholder\" data-value=\"\">\r\n\t\t\t\t\t<div class=\"webcimes-select__option-label\" title=\"${this.options.placeholderText}\" aria-label=\"${this.options.placeholderText}\">${this.options.placeholderText}</div>\r\n\t\t\t\t</div>\\n`;\r\n                this.select.querySelector('.webcimes-select__options')!.appendChild(option.content);\r\n            }\r\n            // Else if no option selected and no placeholder\r\n            else {\r\n                this.select.classList.remove('webcimes-select--selected');\r\n                this.select\r\n                    .querySelector('.webcimes-select > .webcimes-select__clear')\r\n                    ?.classList.remove('webcimes-select__clear--active');\r\n            }\r\n\r\n            // Event clear selected option on select\r\n            this.select\r\n                .querySelectorAll('.webcimes-select__option .webcimes-select__clear')\r\n                .forEach((el) => {\r\n                    el.addEventListener('click', this.onClearOption);\r\n                });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add option on select\r\n     */\r\n    public addOption(value: string | null) {\r\n        if (value) {\r\n            // If native select single, remove all options selected\r\n            if (!this.nativeSelect!.multiple) {\r\n                // Remove option selected on native select\r\n                this.nativeSelect!.querySelectorAll(`option:not([disabled])`).forEach(\r\n                    (el: HTMLOptionElement) => {\r\n                        el.removeAttribute('selected');\r\n                        el.selected = false;\r\n                    },\r\n                );\r\n            }\r\n\r\n            // Set option selected on native select\r\n            let optionEl = this.nativeSelect!.querySelector(\r\n                `option[value=\"${value}\"]`,\r\n            ) as HTMLOptionElement | null;\r\n            if (optionEl) {\r\n                optionEl.setAttribute('selected', '');\r\n                optionEl.selected = true;\r\n            }\r\n\r\n            // Trigger change event on native select\r\n            this.nativeSelect!.dispatchEvent(new Event('change', { bubbles: true }));\r\n            this.nativeSelect!.dispatchEvent(new Event('input', { bubbles: true }));\r\n\r\n            // Init option on select\r\n            this.initOptions();\r\n\r\n            // If keepOpenDropdown option true\r\n            if (this.options.keepOpenDropdown) {\r\n                // Add selected class on dropdown option\r\n                this.dropdown\r\n                    ?.querySelector(`.webcimes-dropdown__option[data-value=\"${value}\"]`)\r\n                    ?.classList.add('webcimes-dropdown__option--selected');\r\n\r\n                // Set aria-selected on dropdown option to true\r\n                this.dropdown\r\n                    ?.querySelector(`.webcimes-dropdown__option[data-value=\"${value}\"]`)\r\n                    ?.setAttribute('aria-selected', 'true');\r\n\r\n                // Set position and width of dropdown\r\n                this.setDropdownPosition(true);\r\n            } else {\r\n                // Destroy dropdown\r\n                this.destroyDropdown();\r\n            }\r\n\r\n            // Callback on change\r\n            this.select.dispatchEvent(\r\n                new CustomEvent('onChange', {\r\n                    detail: {\r\n                        value: value,\r\n                        selected: true,\r\n                        selectedOptions: this.getSelectedOptions(),\r\n                    },\r\n                }),\r\n            );\r\n            if (typeof this.options.onChange === 'function') {\r\n                this.options.onChange(value, true, this.getSelectedOptions());\r\n            }\r\n\r\n            // Callback on add option\r\n            this.select.dispatchEvent(\r\n                new CustomEvent('onAddOption', {\r\n                    detail: {\r\n                        value: value,\r\n                    },\r\n                }),\r\n            );\r\n            if (typeof this.options.onAddOption === 'function') {\r\n                this.options.onAddOption(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove option on select\r\n     */\r\n    public removeOption(value: string | null) {\r\n        if (value && !this.nativeSelect?.disabled) {\r\n            // Remove option selected on native select\r\n            let optionEl = this.nativeSelect!.querySelector(\r\n                `option[value=\"${value}\"]:not([disabled])`,\r\n            ) as HTMLOptionElement | null;\r\n            if (optionEl) {\r\n                optionEl.removeAttribute('selected');\r\n                optionEl.selected = false;\r\n            }\r\n\r\n            // If native select single and allowClear option\r\n            if (!this.nativeSelect!.multiple && this.options.allowClear) {\r\n                // Set and force native select value to empty string (or placeholder option if define)\r\n                this.nativeSelect!.value = '';\r\n            }\r\n\r\n            // Trigger change event on native select\r\n            this.nativeSelect!.dispatchEvent(new Event('change', { bubbles: true }));\r\n            this.nativeSelect!.dispatchEvent(new Event('input', { bubbles: true }));\r\n\r\n            // Init option on select\r\n            this.initOptions();\r\n\r\n            // If keepOpenDropdown option true\r\n            if (this.options.keepOpenDropdown) {\r\n                // Remove selected class on dropdown option\r\n                this.dropdown\r\n                    ?.querySelector(`.webcimes-dropdown__option[data-value=\"${value}\"]`)\r\n                    ?.classList.remove('webcimes-dropdown__option--selected');\r\n\r\n                // Set aria-selected on dropdown option to false\r\n                this.dropdown\r\n                    ?.querySelector(`.webcimes-dropdown__option[data-value=\"${value}\"]`)\r\n                    ?.setAttribute('aria-selected', 'false');\r\n\r\n                // Set position and width of dropdown\r\n                this.setDropdownPosition(true);\r\n            } else {\r\n                // Destroy dropdown\r\n                this.destroyDropdown();\r\n            }\r\n\r\n            // Callback on change\r\n            this.select.dispatchEvent(\r\n                new CustomEvent('onChange', {\r\n                    detail: {\r\n                        value: value,\r\n                        selected: false,\r\n                        selectedOptions: this.getSelectedOptions(),\r\n                    },\r\n                }),\r\n            );\r\n            if (typeof this.options.onChange === 'function') {\r\n                this.options.onChange(value, false, this.getSelectedOptions());\r\n            }\r\n\r\n            // Callback on remove option\r\n            this.select.dispatchEvent(\r\n                new CustomEvent('onRemoveOption', {\r\n                    detail: {\r\n                        value: value,\r\n                    },\r\n                }),\r\n            );\r\n            if (typeof this.options.onRemoveOption === 'function') {\r\n                this.options.onRemoveOption(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove all options on select\r\n     */\r\n    public removeAllOptions() {\r\n        if (!this.nativeSelect?.disabled) {\r\n            // Remove option selected on native select\r\n            this.nativeSelect!.querySelectorAll(`option:not([disabled])`).forEach(\r\n                (el: HTMLOptionElement) => {\r\n                    el.removeAttribute('selected');\r\n                    el.selected = false;\r\n                },\r\n            );\r\n\r\n            // If native select single and allowClear option\r\n            if (!this.nativeSelect!.multiple && this.options.allowClear) {\r\n                // Set and force native select value to empty string (or placeholder option if define)\r\n                this.nativeSelect!.value = '';\r\n            }\r\n\r\n            // Trigger change event on native select\r\n            this.nativeSelect!.dispatchEvent(new Event('change', { bubbles: true }));\r\n            this.nativeSelect!.dispatchEvent(new Event('input', { bubbles: true }));\r\n\r\n            // Init option on select\r\n            this.initOptions();\r\n\r\n            // If keepOpenDropdown option true\r\n            if (this.options.keepOpenDropdown) {\r\n                // Remove selected class on dropdown option and set aria-selected to false\r\n                this.dropdown?.querySelectorAll(`.webcimes-dropdown__option`).forEach((el) => {\r\n                    el.classList.remove('webcimes-dropdown__option--selected');\r\n                    el.setAttribute('aria-selected', 'false');\r\n                });\r\n\r\n                // Set position and width of dropdown\r\n                this.setDropdownPosition(true);\r\n            } else {\r\n                // Destroy dropdown\r\n                this.destroyDropdown();\r\n            }\r\n\r\n            // Callback on change\r\n            this.select.dispatchEvent(\r\n                new CustomEvent('onChange', {\r\n                    detail: {\r\n                        value: '',\r\n                        selected: false,\r\n                        selectedOptions: this.getSelectedOptions(),\r\n                    },\r\n                }),\r\n            );\r\n            if (typeof this.options.onChange === 'function') {\r\n                this.options.onChange('', false, this.getSelectedOptions());\r\n            }\r\n\r\n            // Callback on remove all option\r\n            this.select.dispatchEvent(new CustomEvent('onRemoveAllOptions'));\r\n            if (typeof this.options.onRemoveAllOptions === 'function') {\r\n                this.options.onRemoveAllOptions();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event init dropdown on click on native select\r\n     */\r\n    private onNativeSelectClick(e: Event) {\r\n        // If dropdown is null, create dropdown\r\n        if (!this.dropdown) {\r\n            this.initDropdown();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event clear selected option on select\r\n     */\r\n    private onClearOption(e: Event) {\r\n        this.removeOption(\r\n            (e.target as HTMLElement)\r\n                .closest('.webcimes-select__option')!\r\n                .getAttribute('data-value'),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Event clear all selected options on select\r\n     */\r\n    private onClearAllOptions(e: Event) {\r\n        this.removeAllOptions();\r\n    }\r\n\r\n    /**\r\n     * Event on keydown on select\r\n     */\r\n    private onKeyDown(e: KeyboardEvent) {\r\n        if ((e.target as HTMLElement).closest('.webcimes-select > .webcimes-select__clear')) {\r\n            if (e.key == 'Enter') {\r\n                e.preventDefault();\r\n                this.removeAllOptions();\r\n            }\r\n        } else if (\r\n            (e.target as HTMLElement).closest('.webcimes-select__option .webcimes-select__clear')\r\n        ) {\r\n            if (e.key == 'Enter') {\r\n                e.preventDefault();\r\n                this.removeOption(\r\n                    (e.target as HTMLElement)\r\n                        .closest('.webcimes-select__option')!\r\n                        .getAttribute('data-value'),\r\n                );\r\n            }\r\n        } else {\r\n            if (!this.dropdown) {\r\n                // Create dropdown\r\n                if (\r\n                    e.key == ' ' ||\r\n                    e.key == 'Enter' ||\r\n                    e.key == 'ArrowUp' ||\r\n                    e.key == 'ArrowDown'\r\n                ) {\r\n                    e.preventDefault();\r\n                    this.initDropdown();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event init dropdown on click on select\r\n     */\r\n    private onClickInitDropdown(e: Event) {\r\n        // If dropdown is null, create dropdown\r\n        if (!this.dropdown && !(e.target as HTMLElement).closest('.webcimes-select__clear')) {\r\n            this.initDropdown();\r\n        }\r\n        // Close dropdown\r\n        else {\r\n            this.destroyDropdown();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Init dropdown\r\n     */\r\n    private initDropdown() {\r\n        if (!this.nativeSelect?.disabled) {\r\n            this.select.classList.add('webcimes-select--open');\r\n            this.select.setAttribute('aria-expanded', 'true');\r\n\r\n            // Append dropdown before the end of body (without inline styles for CSP compliance)\r\n            document.body.insertAdjacentHTML(\r\n                'beforeend',\r\n                `<div class=\"webcimes-dropdown\" ${\r\n                    this.nativeSelect!.getAttribute('dir') == 'rtl' ? `dir=\"rtl\"` : ``\r\n                }>\r\n\t\t\t\t\t${\r\n                        this.options.allowSearch\r\n                            ? `<input class=\"webcimes-dropdown__search-input\" type=\"text\" name=\"search\" autocomplete=\"off\" ${\r\n                                  this.options.defaultTexts.searchPlaceholderText\r\n                                      ? `placeholder=\"${this.options.defaultTexts.searchPlaceholderText}\" title=\"${this.options.defaultTexts.searchPlaceholderText}\" aria-label=\"${this.options.defaultTexts.searchPlaceholderText}\"`\r\n                                      : ``\r\n                              } role=\"combobox\" aria-controls=\"${\r\n                                  this.idDropdownOptions\r\n                              }\" aria-expanded=\"true\" aria-haspopup=\"listbox\" aria-autocomplete=\"list\">`\r\n                            : ``\r\n                    }\r\n\t\t\t\t\t<div class=\"webcimes-dropdown__options\" id=\"${this.idDropdownOptions}\" role=\"listbox\" ${\r\n                        this.nativeSelect?.multiple ? `aria-multiselectable=\"true\"` : ``\r\n                    } tabindex=\"-1\"></div>\r\n\t\t\t\t</div>`,\r\n            );\r\n\r\n            // Define dropdown\r\n            this.dropdown = document.body.lastElementChild as HTMLElement;\r\n\r\n            // Apply max-height via style property for CSP compliance\r\n            const dropdownOptions = this.dropdown.querySelector(\r\n                '.webcimes-dropdown__options',\r\n            ) as HTMLElement;\r\n            if (dropdownOptions) {\r\n                dropdownOptions.style.maxHeight = this.options.maxHeightOptions;\r\n            }\r\n\r\n            // Set options on dropdown\r\n            let options = Array.from(this.nativeSelect!.options).filter((el) => {\r\n                if (el.value !== '') {\r\n                    return el;\r\n                }\r\n            });\r\n            this.setDropdownOptions(Array.from(options));\r\n\r\n            // Set position and width of dropdown\r\n            this.setDropdownPosition();\r\n\r\n            // Set highlight option on first option\r\n            this.setDropdownHighlightOption(0, true);\r\n\r\n            // By default, set focus on select\r\n            this.select.focus();\r\n\r\n            // If allowSearch active\r\n            if (this.options.allowSearch) {\r\n                let searchEl = this.dropdown.querySelector(\r\n                    '.webcimes-dropdown__search-input',\r\n                ) as HTMLInputElement;\r\n\r\n                // Set focus on search field\r\n                if (this.options.searchAutoFocus) {\r\n                    searchEl.focus();\r\n                }\r\n\r\n                // Event search options on dropdown\r\n                searchEl.addEventListener('input', this.onDropdownSearch);\r\n\r\n                // Event on dropdown keydown on search field\r\n                searchEl.addEventListener('keydown', this.onDropdownKeyDown);\r\n            }\r\n\r\n            // Event on dropdown keydown on select\r\n            this.select.addEventListener('keydown', this.onDropdownKeyDown);\r\n\r\n            // Event on resize on Dropdown\r\n            window.addEventListener('resize', this.onDropdownResize);\r\n\r\n            // Event destroy on click or keydown outside dropdown\r\n            ['click', 'keydown'].forEach((typeEvent) => {\r\n                document.addEventListener(typeEvent, this.onDropdownDestroy);\r\n            });\r\n\r\n            // Callback on init dropdown\r\n            this.select.dispatchEvent(new CustomEvent('onInitDropdown'));\r\n            if (typeof this.options.onInitDropdown === 'function') {\r\n                this.options.onInitDropdown();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroy dropdown\r\n     */\r\n    private destroyDropdown() {\r\n        if (this.dropdown) {\r\n            // Destroy dropdown\r\n            this.select.classList.remove('webcimes-select--open');\r\n            this.select.setAttribute('aria-expanded', 'false');\r\n            (\r\n                this.dropdown.querySelector('.webcimes-dropdown__search-input') as HTMLElement\r\n            )?.removeEventListener('input', this.onDropdownSearch);\r\n            (\r\n                this.dropdown.querySelector('.webcimes-dropdown__search-input') as HTMLElement\r\n            )?.removeEventListener('keydown', this.onDropdownKeyDown);\r\n            this.select.removeEventListener('keydown', this.onDropdownKeyDown);\r\n            window.removeEventListener('resize', this.onDropdownResize);\r\n            ['click', 'keydown'].forEach((typeEvent) => {\r\n                document.removeEventListener(typeEvent, this.onDropdownDestroy);\r\n            });\r\n            this.dropdown\r\n                .querySelectorAll(\r\n                    '.webcimes-dropdown__option:not(.webcimes-dropdown__option--disabled)',\r\n                )\r\n                .forEach((el: HTMLElement) => {\r\n                    el.removeEventListener('click', this.onDropdownClickOption);\r\n                    el.removeEventListener('mouseover', this.onDropdownMouseOverOption);\r\n                });\r\n            this.dropdown.remove();\r\n            this.dropdown = null;\r\n\r\n            // Set focus to select after destroy dropdown (only if no other dropdown is open)\r\n            if (!document.querySelector('.webcimes-dropdown')) {\r\n                this.select.focus();\r\n            }\r\n\r\n            // Remove class direction on select after destroy dropdown\r\n            this.select.classList.remove('webcimes-select--direction-bottom');\r\n            this.select.classList.remove('webcimes-select--direction-top');\r\n\r\n            // Callback on destroy dropdown\r\n            this.select.dispatchEvent(new CustomEvent('onDestroyDropdown'));\r\n            if (typeof this.options.onDestroyDropdown === 'function') {\r\n                this.options.onDestroyDropdown();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set dropdown options\r\n     */\r\n    private setDropdownOptions(options: HTMLOptionElement[]) {\r\n        // Remove old events on Dropdown option\r\n        this.dropdown!.querySelectorAll(\r\n            '.webcimes-dropdown__option:not(.webcimes-dropdown__option--disabled)',\r\n        ).forEach((el: HTMLElement) => {\r\n            el.removeEventListener('click', this.onDropdownClickOption);\r\n            el.removeEventListener('mouseover', this.onDropdownMouseOverOption);\r\n        });\r\n\r\n        // Set options\r\n        let optionsEl = document.createElement('template');\r\n        options.forEach((el, index) => {\r\n            let optionEl = document.createElement('template');\r\n            optionEl.innerHTML = `<div class=\"webcimes-dropdown__option ${\r\n                el.selected ? `webcimes-dropdown__option--selected` : ``\r\n            } ${\r\n                el.disabled ? `webcimes-dropdown__option--disabled` : ``\r\n            } ${el.classList.toString()}\" id=\"${this.getUniqueID(\r\n                '#',\r\n                'webcimes-dropdown-option-',\r\n                '',\r\n                optionsEl.content,\r\n            )}\" data-value=\"${el.value}\" title=\"${\r\n                el.textContent\r\n            }\" role=\"option\" aria-label=\"${el.textContent}\" aria-selected=\"${\r\n                el.selected ? `true` : `false`\r\n            }\">\r\n\t\t\t\t${el.textContent}\r\n\t\t\t\t<svg class=\"webcimes-dropdown__icon-selected\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 24 24\" fill=\"currentColor\" role=\"img\" aria-labelledby=\"iconSelectedTitle\"><title id=\"iconSelectedTitle\">${\r\n                    this.options.defaultTexts.optionIconSelectedText\r\n                }</title><path d=\"M 12 2 C 6.4889971 2 2 6.4889971 2 12 C 2 17.511003 6.4889971 22 12 22 C 17.511003 22 22 17.511003 22 12 C 22 6.4889971 17.511003 2 12 2 z M 12 4 C 16.430123 4 20 7.5698774 20 12 C 20 16.430123 16.430123 20 12 20 C 7.5698774 20 4 16.430123 4 12 C 4 7.5698774 7.5698774 4 12 4 z M 16.292969 8.2929688 L 10 14.585938 L 7.7070312 12.292969 L 6.2929688 13.707031 L 10 17.414062 L 17.707031 9.7070312 L 16.292969 8.2929688 z\"/></svg>\r\n\t\t\t</div>\\n`;\r\n\r\n            // If option has optgroup parent\r\n            if (el.closest('optgroup')) {\r\n                let label = el.closest('optgroup')!.label;\r\n\r\n                // Create the optgroup if has not already been created\r\n                if (\r\n                    !optionsEl.content.querySelector(\r\n                        `.webcimes-dropdown__opt-group[data-label='${label}']`,\r\n                    )\r\n                ) {\r\n                    let optGroupEl = document.createElement('template');\r\n                    optGroupEl.innerHTML = `<div class=\"webcimes-dropdown__opt-group\" data-label=\"${label}\" title=\"${label}\" role=\"group\" aria-label=\"${label}\">\r\n\t\t\t\t\t\t<div class=\"webcimes-dropdown__opt-group-label\" role=\"presentation\">${label}</div>\r\n\t\t\t\t\t</div>\\n`;\r\n                    optionsEl.content.appendChild(optGroupEl.content);\r\n                }\r\n\r\n                // Add option to optgroup\r\n                optionsEl.content\r\n                    .querySelector(`.webcimes-dropdown__opt-group[data-label='${label}']`)\r\n                    ?.appendChild(optionEl.content);\r\n            } else {\r\n                // Add option to options\r\n                optionsEl.content.appendChild(optionEl.content);\r\n            }\r\n        });\r\n        this.dropdown!.querySelector('.webcimes-dropdown__options')!.replaceChildren(\r\n            optionsEl.content,\r\n        );\r\n\r\n        // Events on Dropdown option\r\n        this.dropdown!.querySelectorAll(\r\n            '.webcimes-dropdown__option:not(.webcimes-dropdown__option--disabled)',\r\n        ).forEach((el: HTMLElement) => {\r\n            el.addEventListener('click', this.onDropdownClickOption);\r\n            el.addEventListener('mouseover', this.onDropdownMouseOverOption);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set dropdown position and width, relative to select\r\n     */\r\n    private setDropdownPosition(keepDirection: boolean = false) {\r\n        if (this.dropdown) {\r\n            let selectRect = this.select.getBoundingClientRect();\r\n\r\n            // If the dropdown is too high for the bottom of the window, then we direct it to the top (or if keepDirection set to true and webcimes-select--direction-top already exist)\r\n            if (\r\n                (keepDirection &&\r\n                    this.select.classList.contains('webcimes-select--direction-top')) ||\r\n                (!keepDirection &&\r\n                    selectRect.bottom + this.dropdown.getBoundingClientRect().height >\r\n                        window.innerHeight)\r\n            ) {\r\n                this.select.classList.remove('webcimes-select--direction-bottom');\r\n                this.select.classList.add('webcimes-select--direction-top');\r\n                this.dropdown.classList.remove('webcimes-dropdown--direction-bottom');\r\n                this.dropdown.classList.add('webcimes-dropdown--direction-top');\r\n                this.dropdown.style.top =\r\n                    selectRect.top -\r\n                    this.dropdown.getBoundingClientRect().height +\r\n                    window.scrollY +\r\n                    'px';\r\n            }\r\n            // Else direct it to the bottom\r\n            else {\r\n                this.select.classList.remove('webcimes-select--direction-top');\r\n                this.select.classList.add('webcimes-select--direction-bottom');\r\n                this.dropdown.classList.remove('webcimes-dropdown--direction-top');\r\n                this.dropdown.classList.add('webcimes-dropdown--direction-bottom');\r\n                this.dropdown.style.top = selectRect.bottom + window.scrollY + 'px';\r\n            }\r\n\r\n            // Set dropdown left position\r\n            this.dropdown.style.left = selectRect.left + window.scrollX + 'px';\r\n\r\n            // Set dropdown width\r\n            this.dropdown.style.width = selectRect.width + 'px';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set highlight option\r\n     */\r\n    private setDropdownHighlightOption(index: number, autoScroll: boolean) {\r\n        let highlightedOption = this.dropdown!.querySelector(\r\n            '.webcimes-dropdown__option--highlighted',\r\n        );\r\n        let optionsEl = this.dropdown!.querySelectorAll(\r\n            `.webcimes-dropdown__option:not(.webcimes-dropdown__option--disabled)`,\r\n        );\r\n\r\n        // Remove highlighted class on old option\r\n        highlightedOption?.classList.remove('webcimes-dropdown__option--highlighted');\r\n\r\n        // Set highlighted class on new option\r\n        if (optionsEl[index]) {\r\n            highlightedOption = optionsEl[index];\r\n            highlightedOption.classList.add('webcimes-dropdown__option--highlighted');\r\n            this.select!.setAttribute('aria-activedescendant', highlightedOption.id);\r\n            this.dropdown!.querySelector('.webcimes-dropdown__search-input')?.setAttribute(\r\n                'aria-activedescendant',\r\n                highlightedOption.id,\r\n            );\r\n            if (autoScroll) {\r\n                highlightedOption.scrollIntoView({\r\n                    behavior: 'smooth',\r\n                    block: 'nearest',\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event search options on dropdown\r\n     */\r\n    private onDropdownSearch(e: Event) {\r\n        // Search options\r\n        let regexSearch = new RegExp((e.target as HTMLInputElement).value, 'i');\r\n        let options = Array.from(this.nativeSelect!.options).filter((el) => {\r\n            if (el.value !== '') {\r\n                if (\r\n                    (el.textContent && regexSearch.test(el.textContent)) ||\r\n                    regexSearch.test(el.value)\r\n                ) {\r\n                    return true;\r\n                }\r\n            }\r\n        });\r\n\r\n        // If no option match the search, add a no result option if searchNoResultsText exist\r\n        if (options.length == 0 && this.options.defaultTexts.searchNoResultsText) {\r\n            let optionEl = document.createElement('option');\r\n            optionEl.classList.add('webcimes-dropdown__option--no-results');\r\n            optionEl.textContent = this.options.defaultTexts.searchNoResultsText;\r\n            options.push(optionEl);\r\n        }\r\n\r\n        // Set options on dropdown\r\n        this.setDropdownOptions(options);\r\n\r\n        // Set position and width of dropdown\r\n        this.setDropdownPosition(true);\r\n\r\n        // Set highlight option on first option\r\n        this.setDropdownHighlightOption(0, true);\r\n\r\n        // Callback on search dropdown\r\n        this.select.dispatchEvent(\r\n            new CustomEvent('onSearchDropdown', {\r\n                detail: {\r\n                    value: (e.target as HTMLInputElement).value,\r\n                    options: options,\r\n                },\r\n            }),\r\n        );\r\n        if (typeof this.options.onSearchDropdown === 'function') {\r\n            this.options.onSearchDropdown((e.target as HTMLInputElement).value, options);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event on keydown on dropdown\r\n     */\r\n    private onDropdownKeyDown(e: KeyboardEvent) {\r\n        let highlightedOption = this.dropdown!.querySelector(\r\n            '.webcimes-dropdown__option--highlighted',\r\n        );\r\n        if (highlightedOption) {\r\n            if (e.key == 'ArrowUp' || e.key == 'ArrowDown') {\r\n                e.preventDefault();\r\n                let optionsEl = this.dropdown!.querySelectorAll(\r\n                    `.webcimes-dropdown__option:not(.webcimes-dropdown__option--disabled)`,\r\n                );\r\n                let highlightedIndex = Array.from(optionsEl).indexOf(highlightedOption);\r\n                this.setDropdownHighlightOption(\r\n                    e.key == 'ArrowUp'\r\n                        ? highlightedIndex - 1 >= 0\r\n                            ? highlightedIndex - 1\r\n                            : 0\r\n                        : highlightedIndex + 1 <= optionsEl.length - 1\r\n                          ? highlightedIndex + 1\r\n                          : optionsEl.length - 1,\r\n                    true,\r\n                );\r\n            }\r\n            if (e.key == 'Enter') {\r\n                e.preventDefault();\r\n                if (highlightedOption.classList.contains('webcimes-dropdown__option--selected')) {\r\n                    this.removeOption(highlightedOption.getAttribute('data-value'));\r\n                } else {\r\n                    this.addOption(highlightedOption.getAttribute('data-value'));\r\n                }\r\n            }\r\n        }\r\n        if (e.key == 'Escape') {\r\n            e.preventDefault();\r\n            this.destroyDropdown();\r\n        }\r\n        if (e.key == 'Tab') {\r\n            e.preventDefault();\r\n            this.destroyDropdown();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event on mouseover option on dropdown\r\n     */\r\n    private onDropdownMouseOverOption(e: MouseEvent) {\r\n        let optionEl = (e.target as HTMLElement).closest('.webcimes-dropdown__option');\r\n        if (optionEl) {\r\n            let optionsEl = this.dropdown!.querySelectorAll(\r\n                `.webcimes-dropdown__option:not(.webcimes-dropdown__option--disabled)`,\r\n            );\r\n            this.setDropdownHighlightOption(Array.from(optionsEl).indexOf(optionEl), false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event on resize on Dropdown\r\n     */\r\n    private onDropdownResize(e: Event) {\r\n        this.setDropdownPosition();\r\n    }\r\n\r\n    /**\r\n     * Event on select option on Dropdown\r\n     */\r\n    private onDropdownClickOption(e: Event) {\r\n        let optionEl = (e.target as HTMLElement).closest('.webcimes-dropdown__option');\r\n        if (optionEl) {\r\n            if (optionEl.classList.contains('webcimes-dropdown__option--selected')) {\r\n                this.removeOption(optionEl.getAttribute('data-value'));\r\n            } else {\r\n                this.addOption(optionEl.getAttribute('data-value'));\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event destroy on click or keydown outside dropdown\r\n     */\r\n    private onDropdownDestroy(e: Event) {\r\n        if (\r\n            (e.target as HTMLElement).closest('select') != this.nativeSelect &&\r\n            (e.target as HTMLElement).closest('.webcimes-select') != this.select &&\r\n            (e.target as HTMLElement).closest('.webcimes-dropdown') != this.dropdown\r\n        ) {\r\n            this.destroyDropdown();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Factory function to create a WebcimesSelect instance with proper typing\r\n */\r\nexport function CreateWebcimesSelect(options: Partial<Options>): WebcimesSelect {\r\n    return new WebcimesSelectImpl(options);\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","a","i","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","WebcimesSelectImpl","nativeSelect","select","dropdown","options","idDropdownOptions","defaultTexts","en","removeOptionText","removeAllOptionsText","searchPlaceholderText","searchNoResultsText","optionIconSelectedText","fr","es","de","it","pt","nl","ru","constructor","defaults","element","setId","setClass","width","height","maxHeightOptions","style","allowClear","allowSearch","searchAutoFocus","keepOpenDropdown","language","this","placeholderText","ariaLabel","onInit","onDestroy","onInitDropdown","onDestroyDropdown","onSearchDropdown","onChange","onAddOption","onRemoveOption","onRemoveAllOptions","onNativeSelectClick","bind","onClearOption","onClearAllOptions","onKeyDown","onClickInitDropdown","onDropdownSearch","onDropdownKeyDown","onDropdownMouseOverOption","onDropdownResize","onDropdownClickOption","onDropdownDestroy","init","getHtmlElements","htmlElements","NodeList","Array","from","HTMLElement","document","querySelectorAll","getHtmlElement","htmlElement","querySelector","getUniqueID","selectorPrefix","identifier","selectorSuffix","Math","floor","random","display","getAttribute","label","closest","id","innerText","trim","insertAdjacentHTML","multiple","disabled","nextElementSibling","textContent","setProperty","oldStyle","setAttribute","initOptions","addEventListener","setTimeout","dispatchEvent","CustomEvent","destroy","destroyDropdown","removeEventListener","forEach","el","removeProperty","remove","disable","classList","add","removeAttribute","getSelectedOptions","selectedOptions","filter","innerHTML","length","option","createElement","appendChild","content","addOption","selected","optionEl","Event","bubbles","setDropdownPosition","detail","removeOption","removeAllOptions","e","initDropdown","target","preventDefault","body","lastElementChild","dropdownOptions","maxHeight","setDropdownOptions","setDropdownHighlightOption","focus","searchEl","window","typeEvent","optionsEl","index","toString","optGroupEl","replaceChildren","keepDirection","selectRect","getBoundingClientRect","contains","bottom","innerHeight","top","scrollY","left","scrollX","autoScroll","highlightedOption","scrollIntoView","behavior","block","regexSearch","RegExp","test","push","highlightedIndex","indexOf","CreateWebcimesSelect"],"sourceRoot":""}